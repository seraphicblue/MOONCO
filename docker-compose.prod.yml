version: "3.8"

services:
  nest_app:
    container_name: nest_app_prod
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "${NODE_PORT}:${NODE_PORT}"
    env_file:
      - .env.prod
    environment:
      - NODE_PORT=${NODE_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${NODE_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 700M

  nginx:
    image: nginx:latest
    container_name: nginx_prod
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - nest_app
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 200M

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus_prod
    env_file:
      - .env.prod
    environment:
      - PROMETHEUS_PORT=${PROMETHEUS_PORT}
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    healthcheck:
      test:
        ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9090"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 300M

  grafana:
    image: grafana/grafana:8.2.2
    container_name: grafana_prod
    env_file:
      - .env.prod
    environment:
      - PROMETHEUS_PORT=${PROMETHEUS_PORT}
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PROMETHEUS_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 300M

volumes:
  prometheus_data:
  grafana_data:
